//- doctype html
//- html
//-   head
//-     title Your Next Page

//-     script.
//-       function updatePickupDate() {
//-         var orderDateElement = document.getElementById('order-date');
//-         var pickupDateElement = document.getElementById('pickup-date');
//-         var daysSelectElement = document.getElementById('days-select');

//-         var selectedDays = parseInt(daysSelectElement.value);
//-         var orderDate = new Date(orderDateElement.value);
//-         var pickupDate = new Date(orderDate.getTime() + selectedDays * 24 * 60 * 60 * 1000);
//-         var formattedPickupDate = pickupDate.toISOString().split('T')[0];

//-         pickupDateElement.value = formattedPickupDate;
//-       }

//-       function updateSubmitButton() {
//-         var checkboxes = document.querySelectorAll('input[type="checkbox"]');
//-         var submitButton = document.getElementById('submit-button');
//-         var allChecked = true;

//-         for (var i = 0; i < checkboxes.length; i++) {
//-           if (!checkboxes[i].checked) {
//-             allChecked = false;
//-             break;
//-           }
//-         }

//-         submitButton.disabled = !allChecked;
//-       }

//-     style.
//-       /* Center the form */
//-       body {
//-         margin-left: 400px;
//-         margin-top: 100px;
//-         display: inline-block;
//-         justify-content: center;
//-         align-items: center;
//-         height: 100vh;
//-       }

//-       /* Style the form container */
//-       form {
//-         width: 700px;
//-         background-color: #66ffff;
//-         padding: 20px;
//-         border: 1px solid #ccc;
//-         border-radius: 5px;
//-         box-shadow: 5px 5px 30px rgba(34, 22, 34, 0.9);
//-       }

//-       /* Style the form elements */
//-       label {
//-         display: block;
//-         margin-top: 10px;
//-       }

//-       input[type="date"],
//-       select {
//-         width: 100%;
//-         padding: 10px;
//-         padding-right: 0px !important;
//-         margin-top: 5px;
//-         border: 1px solid #ccc;
//-         border-radius: 5px;
//-         margin-right: 5px;
//-       }

//-       /* Style the submit button */
//-       button[type="submit"] {
//-         display: block;
//-         width: 100%;
//-         padding: 10px;
//-         margin-top: 10px;
//-         background-color: #007BFF;
//-         color: #fff;
//-         border: none;
//-         border-radius: 5px;
//-         cursor: pointer;
//-       }

//-       button[type="submit"]:hover {
//-         background-color: #0056b3;
//-       }

//-       /* Style the result message */
//-       p {
//-         text-align: center;
//-         font-weight: bold;
//-         margin-top: 10px;
//-       }

//-       /* Center the pickup date input */
//-       #pickup-date {
//-         margin: 0 auto;
//-         display: block;
//-       }

//-       .mydiv {
//-         background-color: #009999;
//-       }

//-       .headinghh {
//-         font-size: 25px;
//-       }

//-       .inheading {
//-         color: red;
//-         font: bold;
//-         font-size: 25px;
//-       }

//-   body
//-     // Your Pug template content goes here
//-     P.headinghh FILL THE FOLLOWING DETAILS
//-     form(action="/submit-order", method="post")
//-       label(for="order-date") Order Date:
//-       input#order-date(type="date", name="orderDate", onchange="updatePickupDate()", required)

//-       label(for="days-select") Select Number of Days (2 to 180):
//-       select#days-select(name="daysSelect", onchange="updatePickupDate()", required)
//-         //- Add options for the number of days
//-         - for (var i = 2; i <= 90; i++) // Adjust the range as needed
//-           option(value=i)= i + ' days'

//-       label(for="pickup-date") Pickup Date:
//-       input#pickup-date(type="date", name="pickupDate", readonly, required)

//-       label(for="pan-number") PAN Number:
//-       input#pan-number(type="text", name="panNumber", placeholder="Enter PAN Number", required)

//-       label(for="address") Address:
//-       input#address(type="text", name="address", placeholder="Enter Your Address", required)

//-       label(for="phone") Phone Number:
//-       input#phone(type="tel", name="phone", placeholder="Enter Your Phone Number", required)

//-       p.inheading PLEASE ACCEPT ALL TERMS AND CONDITIONS...

//-       // Total Amount and Checkboxes Section
//-       div.mydiv
//-         script.
//-           // Add checkboxes with text
//-           var checkboxContainer = document.createElement('div');
//-           checkboxContainer.className = 'checkbox-container';
//-           for (var i = 1; i <= 5; i++) {
//-             var checkbox = document.createElement('input');
//-             checkbox.type = 'checkbox';
//-             checkbox.id = 'checkbox' + i;
//-             checkbox.name = 'checkbox';
//-             checkbox.addEventListener('change', updateSubmitButton);

//-             var label = document.createElement('label');
//-             label.setAttribute('for', 'checkbox' + i);

//-             if (i === 1) {
//-               label.textContent = 'The rental period commences at the agreed start date and time and ends on the specified end date and time.';
//-             } else if (i === 2) {
//-               label.textContent = 'Please be aware that late returns may incur additional charges, as outlined in the rental agreement.';
//-             } else if (i === 3) {
//-               label.textContent = 'You are accountable for any damage to or loss of the rented item during the rental period.';
//-             } else if (i === 4) {
//-               label.textContent = 'It is expected that you return the rented item in the same clean and well-maintained condition in which it was provided.';
//-             } else if (i === 5) {
//-               label.textContent = 'I HEREBY AGREE ALL TERMS & CONDITIONS';
//-             }

//-             checkboxContainer.appendChild(checkbox);
//-             checkboxContainer.appendChild(label);

//-             var lineBreak = document.createElement('br');
//-             checkboxContainer.appendChild(lineBreak);
//-           }

//-           // Add the submit button
//-           var submitButton = document.createElement('button');
//-           submitButton.type = 'submit';
//-           submitButton.id = 'submit-button';
//-           submitButton.textContent = 'Make Payment';
//-           submitButton.disabled = true;

//-           document.querySelector('.mydiv').appendChild(checkboxContainer);
//-           document.querySelector('.mydiv').appendChild(submitButton);

//-           // Function to get the value of a cookie by name
//-           function getCookie(name) {
//-             var value = `; ${document.cookie}`;
//-             var parts = value.split(`; ${name}=`);
//-             if (parts.length === 2) return parts.pop().split(';').shift();
//-           }

//-           // Retrieve the totalAmount from the cookie
//-           var totalAmount = getCookie('totalAmount');
//-           if (totalAmount) {
//-             // Display the total amount
//-             var message = `The total amount is: $${parseFloat(totalAmount).toFixed(2)}`;
//-             console.log(message);
//-           } else {
//-             // Handle the case where the value doesn't exist in the cookie
//-             console.log('Total Amount not found in the cookie.');
//-           }



      
doctype html
html
  head
    title Your Next Page

    script.
      function updatePickupDate() {
        var orderDateElement = document.getElementById('order-date');
        var pickupDateElement = document.getElementById('pickup-date');
        var daysSelectElement = document.getElementById('days-select');

        var selectedDays = parseInt(daysSelectElement.value);
        var orderDate = new Date(orderDateElement.value);
        var pickupDate = new Date(orderDate.getTime() + selectedDays * 24 * 60 * 60 * 1000);
        var formattedPickupDate = pickupDate.toISOString().split('T')[0];

        pickupDateElement.value = formattedPickupDate;

        // Calculate payable amount
        var totalAmount = parseFloat(getCookie('totalAmount'));
        var payable = (selectedDays / 100) * totalAmount;
        if(selectedDays < 30){
          payable=payable/2;
        
        }else if(selectedDays>30 &&  selectedDays <50){
          payable=payable/3;
          
        }
        
        
        var payableElement = document.getElementById('payable-amount');
        payableElement.textContent = 'Payable Amount: $' + payable.toFixed(2);
      }
      
      function updateSubmitButton() {
        var checkboxes = document.querySelectorAll('input[type="checkbox"]');
        var submitButton = document.getElementById('submit-button');
        var allChecked = true;

        for (var i = 0; i < checkboxes.length; i++) {
          if (!checkboxes[i].checked) {
            allChecked = false;
            break;
          }
        }

        submitButton.disabled = !allChecked;
      }

    style.
      /* Center the form */
      body {
        margin-left:400px;
        margin-top:100px;
        display:inline-block;
        justify-content: center;
        align-items: center;
        height: 100vh;
        
      }

      /* Style the form container */
      form {
        width:700px;
        background-color:#66ffff;
        
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 35px;
        box-shadow: 5px 5px 30px rgba(34, 22, 34, 0.9);
      }

      /* Style the form elements */
      label {
        display: block;
        margin-top: 10px;
      }

      input[type="date"],
      select {
        width: 100%;
        padding: 10px;
        padding-right:0px !important;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-right:5px;
      }

      /* Style the submit button */
      button[type="submit"] {
        display: block;
        width: 100%;
        padding: 10px;
        margin-top: 10px;
        background-color: #007BFF;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }

      button[type="submit"]:hover {
        background-color: #0056b3;
      }

      /* Style the result message */
      p {
        text-align: center;
        font-weight: bold;
        margin-top: 10px;
      }

      /* Center the pickup date input */
      #pickup-date {
        margin: 0 auto;
        display: block;
      } 
      .hhh{
        margin-top:100px;
      }
      .mydiv{
        background-color:#009999;
      }
      .headinghh{
        font-size:25px;
      }
      .inheading{
        color:red;
        font:bold;
        font-size:25px;
      }
      #pan-number{
        width: 300px;
        padding:10px;
        border-radius:10px;
        border:none;

      }
      #address{
        padding :10px;
        width: 300px;
        height:100px;
        border-radius:10px;
        border:none;

      }
      #phone{
        width:300px;
        padding:10px;
        border-radius:10px;
        border:none;

      }

  body
    // Your Pug template content goes here
    P.headinghh FILL THE FOLLOWING DETAILS
    form(action="/submit-order", method="post")
      label(for="order-date") Order Date:
      input#order-date(type="date", name="orderDate", onchange="updatePickupDate()", required)

      label(for="days-select") Select Number of Days (2 to 180):
      select#days-select(name="daysSelect", onchange="updatePickupDate()", required)
        option(value="2") 2 days
        option(value="3") 3 days
        option(value="4") 4 days
        option(value="5") 5 days
        option(value="6") 6 days
        option(value="7") 7 days
        option(value="8") 8 days
        option(value="9") 9 days
        option(value="10") 10 days
        option(value="11") 11 days
        option(value="12") 12 days
        option(value="13") 13 days
        option(value="14") 14 days
        option(value="15") 15 days
        option(value="16") 16 days
        option(value="17") 17 days
        option(value="18") 18 days
        option(value="19") 19 days
        option(value="20") 20 days
        option(value="21") 21 days
        option(value="22") 22 days
        option(value="23") 23 days
        option(value="24") 24 days
        option(value="25") 25 days
        option(value="26") 26 days
        option(value="27") 27 days
        option(value="28") 28 days
        option(value="29") 29 days
        option(value="30") 30 days
        option(value="31") 31 days
        option(value="32") 32 days
        option(value="33") 33 days
        option(value="34") 34 days
        option(value="35") 35 days      
        option(value="36") 36 days
        option(value="37") 37 days
        option(value="38") 38 days
        option(value="39") 39 days
        option(value="40") 40 days
        option(value="41") 41 days
        option(value="42") 42 days
        option(value="43") 43 days
        option(value="44") 44 days
        option(value="45") 45 days
        option(value="46") 46 days
        option(value="47") 47 days
        option(value="48") 48 days
        option(value="49") 49 days
        option(value="50") 50 days
        option(value="51") 51 days
        option(value="52") 52 days
        option(value="53") 53 days
        option(value="54") 54 days
        option(value="55") 55 days
        option(value="56") 56 days
        option(value="57") 57 days
        option(value="58") 58 days
        option(value="59") 59 days
        option(value="60") 60 days
        option(value="61") 61 days
        option(value="62") 62 days
        option(value="63") 63 days
        option(value="64") 64 days
        option(value="65") 65 days
        option(value="66") 66 days
        option(value="67") 67 days
        option(value="68") 68 days
        option(value="69") 69 days
        option(value="70") 70 days
        option(value="71") 71 days
        option(value="72") 72 days
        option(value="73") 73 days
        option(value="74") 74 days
        option(value="75") 75 days
        option(value="76") 76 days
        option(value="77") 77 days
        option(value="78") 78 days
        option(value="79") 79 days
        option(value="80") 80 days
        option(value="81") 81 days
        option(value="82") 82 days
        option(value="83") 83 days
        option(value="84") 84 days
        option(value="85") 85 days
        option(value="86") 86 days
        option(value="87") 87 days
        option(value="88") 88 days
        option(value="89") 89 days
        option(value="90") 90 days

      label(for="pickup-date") Pickup Date:
      input#pickup-date(type="date", name="pickupDate", readonly, required)

      label(for="pan-number") PAN Number:
      input#pan-number(type="text", name="panNumber", placeholder="Enter PAN Number", required)

      label(for="address") Address:
      input#address(type="text", name="address", placeholder="Enter Your Address", required)

      label(for="phone") Phone Number:
      input#phone(type="tel", name="phone", placeholder="Enter Your Phone Number", required)


      p.inheading PLEASE ACCEPT ALL TERMS AND CONDITIONS...

      // Total Amount and Checkboxes Section
      div.mydiv
        script.
          // Function to get the value of a cookie by name
          function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
          }
          // Retrieve the totalAmount from the cookie
          const totalAmount = getCookie('totalAmount');
          if (totalAmount) {
            // Display the total amount
            const message = `The total amount is: $${parseFloat(totalAmount).toFixed(2)}`;
            console.log(message);

            // Add checkboxes with text
            const checkboxContainer = document.createElement('div');
            checkboxContainer.className = 'checkbox-container';
            for (let i = 1; i <= 5; i++) {
              const checkbox = document.createElement('input');
              checkbox.type = 'checkbox';
              checkbox.id = 'checkbox' + i;
              checkbox.name = 'checkbox';
              checkbox.addEventListener('change', updateSubmitButton);
              checkboxContainer.appendChild(checkbox);
              const label = document.createElement('label');
              label.setAttribute('for', 'checkbox' + i);
              if(i==1){
                label.textContent = `The rental period commences at the agreed start date and time and ends on the specified end date and time.`;
              }else if(i==2){
                label.textContent = `Please be aware that late returns may incur additional charges, as outlined in the rental agreement.`;

              }else if(i==3){
                label.textContent = `You are accountable for any damage to or loss of the rented item during the rental period.`;

              }else if(i==4){
                label.textContent = `It is expected that you return the rented item in the same clean and well-maintained condition in which it was provided.`;

              }else if(i==5){
                label.textContent = ` I HEREBY AGREE ALL TERMS & CONDITIONS`;

              }
              checkboxContainer.appendChild(label);
            }
            document.querySelector('.mydiv').appendChild(checkboxContainer);
            


            // Add a line break
            const lineBreak = document.createElement('br');
            document.querySelector('.mydiv').appendChild(lineBreak);

            // Add the payable amount display
            const payableElement = document.createElement('p');
            payableElement.name='amount';
            payableElement.id = 'payable-amount';
            payableElement.textContent = 'Payable Amount: $0.00';
            document.querySelector('.mydiv').appendChild(payableElement);

            // Add the submit button
            var submitButton = document.createElement('button');
            submitButton.type = 'submit';
            submitButton.id = 'submit-button';
            submitButton.textContent = 'Make Payment';
            submitButton.disabled = true;
            document.querySelector('.mydiv').appendChild(submitButton);
          }
          else {
            // Handle the case where the value doesn't exist in the cookie
            console.log('Total Amount not found in the cookie.');
          }
